name: Seed environment

on:
  workflow_dispatch:
    inputs:
      environment:
        default: 'DEV'
        description: 'Environment - "DEV/STG"'
        required: true
        type: choice
        options:
          - DEV
          - STG
      cognito_user_pass:
        default: 'Test12345!'
        description: 'Cognito User Password for creation'
        required: true
  schedule:
    - cron: '30 21 * * 1-5'

permissions:
  id-token: write
  contents: read

env:
  DEFAULT_ENV: 'DEV'
  DEFAULT_PASS: 'Test12345!'
jobs:
  data:
    name: Seed ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Set endpoint variable
        run: echo "ENDPOINT=${{ secrets[format('HASURA_ENDPOINT_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}" >> $GITHUB_ENV

      - name: Set Hasura secret
        run: echo "SECRET=${{ secrets[format('HASURA_ADMIN_PASS_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9.15.5'
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Install Hasura CLI
        run: |
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | VERSION=v2.28.2 bash

      - name: Seed environment
        working-directory: ./hasura
        run: |
          echo Hasura Migrate Apply
          hasura migrate apply --all-databases --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Metadata Reload
          hasura metadata reload --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Seed Apply
          hasura seed apply --admin-secret $SECRET --endpoint $ENDPOINT --database-name default

      - name: Seed orders
        run: pnpm seed:orders

  users-auth:
    needs: data
    name: ${{ github.event.inputs.environment }} Cognito - Profile DB Users alignment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets[format('IAM_SERVICE_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}
          role-duration-seconds: 900

      - name: Set endpoint variable
        run: echo "HASURA_URL=${{ secrets[format('HASURA_ENDPOINT_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}" >> $GITHUB_ENV

      - name: Set Hasura secret
        run: echo "HASURA_SECRET=${{ secrets[format('HASURA_ADMIN_PASS_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}" >> $GITHUB_ENV

      - name: Set Cognito User Pool ID
        run: echo "COGNITO_POOL_ID=${{ secrets[format('COGNITO_POOL_ID_{0}', github.event.inputs.environment || env.DEFAULT_ENV)] }}" >> $GITHUB_ENV

      - name: Get users from profile DB table
        id: profile-db
        run: |
          db_users=( $(curl -s --location --request POST "${HASURA_URL}/v1/graphql" \
          --header "content-type: application/json" \
          --header "x-hasura-admin-secret: ${HASURA_SECRET}" \
          --data-raw '{"query":"query GetProfiles {\r\n profile {\r\n email\r\n}\r\n}\r\n","variables":{}}' \
          | jq '.data.profile[].email') )
          echo "db_users=${db_users[@]}" >> $GITHUB_OUTPUT

      - name: Cognito Users Update
        run: |
          chmod +x ./.github/scripts/cognito_user_migration.sh
          user_pool=${COGNITO_POOL_ID}
          db_users=( ${{ steps.profile-db.outputs.db_users }} )
          cognito_user_password=${{ inputs.cognito_user_pass || env.DEFAULT_PASS }}
          ./.github/scripts/cognito_user_migration.sh -c "${user_pool}" -u "${db_users[*]}" -p "${cognito_user_password}"
        shell: bash
