name: Pipeline

on:
  workflow_call:
    inputs:
      mode:
        type: string
        required: false
        default: 'production'
      version:
        type: string
        required: false
        default: ${{ github.sha }}
      checkout_ref:
        required: false
        type: string
      aws_region:
        required: true
        type: string
        default: 'eu-west-2'
    secrets:
      cognito_user_pool_id:
        required: true
      cognito_user_pool_client_id:
        required: true
      cognito_user_pool_id_au:
      cognito_user_pool_client_id_au:
      hasura_endpoint:
        required: true
      hasura_ws_endpoint:
        required: true
      s3_bucket:
        required: true
      service_role_arn:
        required: true
      hasura_admin_pass:
        required: true
      wp_host:
        required: true
      gmaps_key:
        required: true
      recaptcha_key:
        required: true
      stripe_key:
        required: true
      request_quote_url:
        required: true
      sentry_auth_token:
        required: false

jobs:
  build-deploy:
    name: CD
    env:
      NODE_OPTIONS: '--max-old-space-size=6656'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.service_role_arn }}
          role-duration-seconds: 1200

      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Build web
        run: pnpm build --mode ${{inputs.mode}}
        env:
          VITE_AWS_REGION: ${{ inputs.aws_region }}
          VITE_COGNITO_USER_POOL_ID: ${{ secrets.cognito_user_pool_id }}
          VITE_COGNITO_USER_POOL_CLIENT_ID: ${{ secrets.cognito_user_pool_client_id }}
          VITE_COGNITO_USER_POOL_ID_AU: ${{ secrets.cognito_user_pool_id_au }}
          VITE_COGNITO_USER_POOL_CLIENT_ID_AU: ${{ secrets.cognito_user_pool_client_id_au }}
          VITE_HASURA_GRAPHQL_API: '${{ secrets.hasura_endpoint }}/v1/graphql'
          VITE_HASURA_WS_GRAPHQL_API: '${{ secrets.hasura_ws_endpoint }}/v1/graphql'
          VITE_BASE_WORDPRESS_URL: '${{ secrets.wp_host }}'
          VITE_GMAPS_KEY: ${{ secrets.gmaps_key }}
          VITE_RECAPTCHA_KEY: ${{secrets.recaptcha_key}}
          VITE_STRIPE_KEY: ${{ secrets.stripe_key }}
          VITE_APP_VERSION: ${{ inputs.version }}
          REQUEST_QUOTE_URL: ${{ secrets.request_quote_url }}
          SENTRY_AUTH_TOKEN: ${{secrets.sentry_auth_token}}

      - name: Deploy to S3 bucket
        run: aws s3 sync ./dist/ ${{ secrets.s3_bucket }} --delete

      - name: Sentry Release
        uses: getsentry/action-release@v1.7.0
        continue-on-error: true
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.sentry_auth_token }}
          SENTRY_ORG: 'team-teach-ltd'
          SENTRY_PROJECT: 'team-teach-hub'
        with:
          environment: ${{ inputs.mode }}

  hasura_migrations:
    name: Hasura migrations
    needs: build-deploy
    runs-on: ubuntu-latest

    env:
      SECRET: ${{ secrets.hasura_admin_pass }}
      ENDPOINT: ${{ secrets.hasura_endpoint }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Install Hasura CLI
        run: |
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | VERSION=v2.28.2 bash

      - name: Apply Hasura migrations
        working-directory: ./hasura
        run: |
          echo Hasura Metadata Apply
          hasura metadata apply --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Migrate Apply
          hasura migrate apply --all-databases --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Metadata Reload
          hasura metadata reload --admin-secret $SECRET --endpoint $ENDPOINT
