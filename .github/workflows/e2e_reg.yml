name: E2E Regression

on:
  workflow_dispatch:
    inputs:
      environment:
        default: 'DEV'
        description: 'Environment - "DEV/STG"'
        required: true
        type: choice
        options:
          - DEV
          - STG
  schedule:
    - cron: '30 21 * * 1-5'

jobs:
  tests:
    name: E2E regression tests
    timeout-minutes: 120
    runs-on: ubuntu-8core
    env:
      CI: true
      DEFAULT_TARGET: 'DEV'
      E2E: true
    strategy:
      fail-fast: false
      matrix:
        browsers: ['chromium']
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Set Environment Variables
        run: |
          echo "TARGET=${{ github.event.inputs.environment || env.DEFAULT_TARGET }}" >> $GITHUB_ENV
          echo "HASURA_SECRET=${{ secrets[format('HASURA_ADMIN_PASS_{0}', github.event.inputs.environment || env.DEFAULT_TARGET)] }}" >> $GITHUB_ENV
          echo "CI=${{ env.CI }}" >> $GITHUB_ENV
          echo "E2E=${{ env.E2E }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9.15.5'

      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            pnpm install
          else
            pnpm pkg delete scripts.prepare && pnpm install --frozen-lockfile
          fi

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Playwright tests
        id: playwright
        run: pnpm nx e2e:${{ matrix.browsers }} @teamteach/hub.web-e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Playwright report
        uses: actions/upload-artifact@v4
        if: failure() && steps.playwright.outcome == 'failure'
        with:
          name: test-artifacts
          path: test-results

      - name: Notify Job Status to Slack
        if: failure()
        env:
          GH_JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          chmod +x ./.github/scripts/slack_notify.sh
          ./.github/scripts/slack_notify.sh "${{ job.status }}" "${{ env.GH_JOB_URL }}" "${{ env.SLACK_WEBHOOK_URL }}"
        shell: bash
