name: E2E Regression

on:
  workflow_dispatch:
    inputs:
      environment:
        default: 'DEV'
        description: 'Environment - "DEV/STG"'
        required: true
        type: choice
        options:
          - DEV
          - STG
  schedule:
    - cron: '30 21 * * 1-5'

jobs:
  install:
    timeout-minutes: 60
    name: Setup Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
            version: 8
      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: cache-playwright
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm i --frozen-lockfile

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: pnpm playwright install --with-deps

  tests:
    name: E2E regression tests
    needs: install
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      CI: true
      DEFAULT_TARGET: 'DEV'
      E2E: true
    strategy:
      fail-fast: false
      matrix:
        browsers: ['chromium']
        shardIndex: [1, 2, 3]
        shardTotal: [3]
    steps:
      - name: Set Environment Variables
        run: |
          echo "TARGET=${{ github.event.inputs.environment || env.DEFAULT_TARGET }}" >> $GITHUB_ENV
          echo "HASURA_SECRET=${{ secrets[format('HASURA_ADMIN_PASS_{0}', github.event.inputs.environment || env.DEFAULT_TARGET)] }}" >> $GITHUB_ENV
          echo "CI=${{ env.CI }}" >> $GITHUB_ENV
          echo "E2E=${{ env.E2E }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          # TODO Rewrite it
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      
      - name: Install Dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i --frozen-lockfile
  
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Playwright tests
        id: playwright
        run: pnpm test:e2e:${{ matrix.browsers }} --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} playwright/tests

      - name: Playwright report
        uses: actions/upload-artifact@v3
        if: failure() && steps.playwright.outcome == 'failure'
        with:
          name: test-artifacts
          path: test-results

      - name: Notify Job Status to Slack
        if: failure()
        env:
          GH_JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          chmod +x ./.github/scripts/slack_notify.sh
          ./.github/scripts/slack_notify.sh "${{ job.status }}" "${{ env.GH_JOB_URL }}" "${{ env.SLACK_WEBHOOK_URL }}"
        shell: bash
