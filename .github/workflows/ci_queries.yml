name: Query tests

on:
  pull_request:
    branches:
      - main

jobs:
  query-tests:
    name: Query tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      CI: true
    services:
      postgres:
        image: postgres:14
        ports:
          - 6432:6432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: tth-db
          POSTGRES_MAX_CONNECTIONS: 200
          POSTGRES_HOST_AUTH_METHOD: md5
          POSTGRES_INITDB_ARGS: --auth=md5
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      pgbouncer:
        image: edoburu/pgbouncer:latest
        ports:
          - 5432:5432
        env:
          DB_USER: postgres
          DB_PASSWORD: root
          DB_NAME: tth-db
          DB_PORT: 5432
          DB_HOST: postgres
          POOL_MODE: session
          MAX_CLIENT_CONN: 200
          DEFAULT_POOL_SIZE: 50

      graphql-engine:
        image: hasura/graphql-engine:v2.28.2-ce.cli-migrations-v3
        ports:
          - 8080:8080
        env:
          HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:root@pgbouncer:5432/tth-db
          HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
          HASURA_GRAPHQL_ADMIN_SECRET: tth-hasura-key
          ACTIONS_HOST: 'dummy-url-to-generate-actions'
          EVENTS_HOST: 'dummy-url-to-generate-actions'
          HASURA_GRAPHQL_JWT_SECRET: '{"type":"RS256","jwk_url":"https://cognito-idp.eu-west-2.amazonaws.com/eu-west-2_JYEuK9iJg/.well-known/jwks.json","claims_format":"stringified_json"}'

    steps:
      - name: Set Environment Variables
        run: |
          echo "CI=${{ env.CI }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9.15.5'

      - name: Build
        uses: actions/setup-node@v5
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm pkg delete scripts.prepare && pnpm install --no-frozen-lockfile

      - name: Apply Hasura migrations and metadata
        run: |
          cp hasura/.env.sample hasura/.env
          pnpm hasura metadata apply
          pnpm hasura migrate apply --database-name default
          pnpm hasura migrate status --database-name default
          pnpm hasura metadata reload
          pnpm hasura metadata ic list
          pnpm hasura migrate apply --goto 101 --database-name default
          pnpm hasura migrate status --database-name default
          pnpm hasura migrate apply --database-name default
          pnpm hasura migrate status --database-name default
          pnpm hasura metadata reload
          pnpm hasura metadata ic list

      - name: Apply Hasura seed data
        run: |
          pnpm hasura seed apply --database-name default

      - name: Playwright tests
        id: playwright
        run: pnpm nx e2e:queries @teamteach/hub.web-e2e

      - name: Playwright report
        uses: actions/upload-artifact@v4
        if: failure() && steps.playwright.outcome == 'failure'
        with:
          name: test-artifacts
          path: test-results
