name: CD

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: CD
    runs-on: ubuntu-latest

    env:
      CD: 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Build
        uses: actions/setup-node@v2
        with:
          node-version: '16.3.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm i

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Test
        run: npm t

      - name: Build web
        run: npm run build
        env:
          VITE_AWS_REGION: eu-west-2
          VITE_COGNITO_USER_POOL_ID: eu-west-2_JYEuK9iJg
          VITE_COGNITO_USER_POOL_CLIENT_ID: fj4mk6om0itrhifsm3kki5h2m
          VITE_HASURA_GRAPHQL_API: '${{ secrets.HASURA_ENDPOINT }}/v1/graphql'

      - name: Deploy to S3 bucket
        run: aws s3 sync ./dist/ ${{ secrets.S3_BUCKET }} --delete

  hasura_migrations:
    name: Hasura migrations
    runs-on: ubuntu-latest

    env:
      SECRET: ${{ secrets.HASURA_ADMIN_PASS }}
      ENDPOINT: ${{ secrets.HASURA_ENDPOINT }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Install Hasura CLI
        run: |
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | VERSION=v2.3.0 bash

      - name: Apply Hasura migrations
        working-directory: ./hasura
        run: |
          echo Hasura Metadata Apply
          hasura metadata apply --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Migrate Apply
          hasura migrate apply --all-databases --admin-secret $SECRET --endpoint $ENDPOINT
          echo Hasura Metadata Reload
          hasura metadata reload --admin-secret $SECRET --endpoint $ENDPOINT

  tests:
    name: E2E regression tests
    needs: [build-deploy, hasura_migrations]
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      TARGET: 'dev'

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Build
        uses: actions/setup-node@v2
        with:
          node-version: '16.3.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm i

      - name: Playwright setup
        run: npx playwright install chromium

      - name: Playwright tests
        run: npm run test:e2e

      - name: Playwright report
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-artifacts
          path: |
            playwright-report
            test-results
