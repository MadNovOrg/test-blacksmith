name: APP-ROLLBACK

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Application Rollback: Environment - "DEV/STG/PROD"'
        required: true
        type: choice
        options:
          - DEV
          - STG
          - PROD
      git_commit_sha:
        description: 'Provide Rollback Git commit sha - If "default" will rollback to previous commit'
        required: false
        default: 'default'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2
  ENV_NAME: ${{ github.event.inputs.environment }}

jobs:
  app-rb:
    name: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Source Code Rollback Action
        run: |
          if ${{ github.event.inputs.git_commit_sha != 'default' }}; then
            echo "Rolls back to ${{ github.event.inputs.git_commit_sha }} commit"
            git reset --hard ${{ github.event.inputs.git_commit_sha }}
          else
            echo "Rolls back to previous commit"
            git reset --hard HEAD~1
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets[format('IAM_SERVICE_{0}', env.ENV_NAME)] }}
          role-duration-seconds: 1200

      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: '16.3.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm set-script prepare "" && npm ci

      - name: Build web
        run: npm run build
        env:
          VITE_AWS_REGION: eu-west-2
          VITE_COGNITO_USER_POOL_ID: ${{ secrets[format('COGNITO_POOL_ID_{0}', env.ENV_NAME)] }}
          VITE_COGNITO_USER_POOL_CLIENT_ID: ${{ secrets[format('COGNITO_CLIENT_ID_{0}', env.ENV_NAME)] }}
          VITE_HASURA_GRAPHQL_API: "${{ secrets[format('HASURA_ENDPOINT_{0}', env.ENV_NAME)] }}/v1/graphql"
          VITE_BASE_WORDPRESS_URL: "${{ secrets[format('WP_HOST_{0}', env.ENV_NAME)] }}/wp-json/wp/v2"
          VITE_GMAPS_KEY: ${{ secrets.GMAPS_KEY }}

      - name: Deploy to S3 bucket
        run: aws s3 sync ./dist/ ${{ secrets[format('S3_BUCKET_{0}', env.ENV_NAME)] }} --delete

  hasura_migrations:
    name: Hasura migrations
    needs: app-rb
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Source Code Rollback Action
        run: |
          if ${{ github.event.inputs.git_commit_sha != 'default' }}; then
            echo "Rolls back to ${{ github.event.inputs.git_commit_sha }} commit"
            git reset --hard ${{ github.event.inputs.git_commit_sha }}
          else
            echo "Rolls back to previous commit"
            git reset --hard HEAD~1
          fi

      - name: Install Hasura CLI
        run: |
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | VERSION=v2.6.1 bash

      - name: Hasura migrations access
        run: |
          echo "SECRET=${{ secrets[format('HASURA_ADMIN_PASS_{0}', env.ENV_NAME)] }}" >> ${GITHUB_ENV}
          echo "ENDPOINT=${{ secrets[format('HASURA_ENDPOINT_{0}', env.ENV_NAME)] }}" >> ${GITHUB_ENV}

      - name: Apply Hasura migrations
        working-directory: ./hasura
        run: |
          echo "get Hasura Status"
          hasura migrate status --admin-secret $SECRET --endpoint $ENDPOINT --database-name default > hasura_status.txt
          hasura_ver_down=( $(cat hasura_status.txt | grep -iv "not present.*not present" | grep -ie "- .*not present.*present" | cut -d " " -f1) )

          echo "Apply migrations using origin HEAD"
          git reset --hard origin/main

          for ((ver=${#hasura_ver_down[@]}-1; ver>=0; ver--))
          do
            echo "Hasura Version: ${hasura_ver_down[$ver]}"
            hasura migrate apply --admin-secret $SECRET --endpoint $ENDPOINT --version "${hasura_ver_down[$ver]}" --type down --database-name default
          done

          if ${{ github.event.inputs.git_commit_sha != 'default' }}; then
            echo "Rolls back to ${{ github.event.inputs.git_commit_sha }} commit"
            git reset --hard ${{ github.event.inputs.git_commit_sha }}
          else
            echo "Rolls back to previous commit"
            git reset --hard HEAD~1
          fi

          echo Hasura Metadata Apply
          hasura metadata apply --admin-secret $SECRET --endpoint $ENDPOINT
