name: CI/CD-DEV

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  lint-and-typecheck:
    if: ${{ ! startsWith(github.head_ref, 'changeset-release/') }}
    name: Lint & Typecheck
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck
  test:
    if: ${{ ! startsWith(github.head_ref, 'changeset-release/') }}
    name: test
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Test
        run: |
          pnpm test:coverage --shard ${{ matrix.shard }}/${{ strategy.job-total }}
          mv coverage/coverage-final.json coverage/coverage-shard${SHARD_NUMBER}.json
          npx nyc merge ./coverage ./coverage/coverage-final.json
          npx nyc report -t coverage --report-dir coverage --reporter=lcov
  sonar-analysis:
    name: Build and analyze
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #       ###### Will keep this as Disabld
  #       ###### If this is enabled CI will either fail or pass based on Sonar's analysis result
  #       # - uses: sonarsource/sonarqube-quality-gate-action@master
  #       #  timeout-minutes: 5
  #       #  env:
  #       #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dev-cd:
    name: DEV
    needs: [lint-and-typecheck, test, sonar-analysis]
    if: |
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push' &&
      ! startsWith(github.head_ref, 'changeset-release/')
    uses: ./.github/workflows/pipeline.yml
    with:
      mode: 'development'
    secrets:
      service_role_arn: ${{ secrets.IAM_SERVICE_DEV }}
      hasura_admin_pass: ${{ secrets.HASURA_ADMIN_PASS_DEV }}
      cognito_user_pool_id: ${{ secrets.COGNITO_POOL_ID_DEV }}
      cognito_user_pool_client_id: ${{ secrets.COGNITO_CLIENT_ID_DEV }}
      hasura_endpoint: ${{ secrets.HASURA_ENDPOINT_DEV }}
      hasura_ws_endpoint: ${{ secrets.HASURA_WS_ENDPOINT_DEV }}
      wp_host: ${{ secrets.WP_HOST_DEV }}
      s3_bucket: ${{ secrets.S3_BUCKET_DEV }}
      gmaps_key: ${{ secrets.GMAPS_KEY }}
      recaptcha_key: ${{ secrets.RECAPTCHA_KEY }}
      stripe_key: ${{ secrets.STRIPE_KEY_DEV }}
      request_quote_url: ${{ secrets.REQUEST_QUOTE_URL }}
      sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}
