name: RELEASE PROD VERSION

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  lint-and-typecheck:
    if: startsWith(github.head_ref, 'changeset-release/')
    name: Lint & Typecheck
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck
  test:
    if: startsWith(github.head_ref, 'changeset-release/')
    name: test
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [ 1, 2, 3, 4 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Build
        uses: actions/setup-node@v4
        with:
          node-version: '18.14.2'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm pkg delete scripts.prepare && pnpm i

      - name: Test
        run: pnpm test -- --shard=${{ matrix.shard }}/${{ strategy.job-total }}

  fetch-version:
    if: startsWith(github.head_ref, 'changeset-release/')
    needs: [lint-and-typecheck, test]
    name: Fetch Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch Version
        run: |
          export RELEASE_VERSION=$(cat ../../package.json | grep '"version":' | tr -d '"' | tr -d 'version: ' | tr -d ',')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

  create-tag:
    if: startsWith(github.head_ref, 'changeset-release/')
    needs: [ lint-and-typecheck, test, fetch-version ]
    name: Create Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Tag
        run: |
          git fetch
          git checkout changeset-release/main
          git tag v${{ env.RELEASE_VERSION }}
          git push origin --tags

  create-release:
    if: startsWith(github.head_ref, 'changeset-release/')
    needs: [lint-and-typecheck, test, fetch-version, create-tag]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
