table:
  name: course_invites
  schema: public
configuration:
  comment: null
  custom_column_names:
    created_at: createdAt
    updated_at: updatedAt
  custom_root_fields: {}
object_relationships:
- name: course
  using:
    foreign_key_constraint_on: course_id
- name: participant
  using:
    manual_configuration:
      column_mapping:
        id: invite_id
      insertion_order: null
      remote_table:
        name: course_participant
        schema: public
insert_permissions:
- permission:
    backend_only: false
    check:
      course:
        leaders:
          profile:
            id:
              _eq: X-Hasura-User-Id
    columns:
    - course_id
    - email
  role: user
select_permissions:
- permission:
    allow_aggregations: true
    columns:
    - course_id
    - created_at
    - email
    - id
    - note
    - status
    - updated_at
    filter:
      course:
        leaders:
          profile:
            id:
              _eq: X-Hasura-User-Id
  role: user
update_permissions:
- permission:
    check: null
    columns:
    - status
    filter:
      _or:
      - course:
          leaders:
            profile:
              id:
                _eq: X-Hasura-User-Id
      - _and:
        - email:
            _eq: X-Hasura-User-Emai
        - status:
            _eq: PENDING
  role: user
delete_permissions:
- permission:
    filter:
      course:
        leaders:
          profile:
            id:
              _eq: X-Hasura-User-Id
  role: user
event_triggers:
- definition:
    enable_manual: false
    insert:
      columns: "*"
  name: send_invite_email
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 60
  webhook: "{{EVENTS_HOST}}/email/course-invite"
