table:
  schema: public
  name: course_participant_audit
object_relationships:
  - name: authorizedBy
    using:
      foreign_key_constraint_on: authorized_by
  - name: course
    using:
      foreign_key_constraint_on: course_id
  - name: profile
    using:
      foreign_key_constraint_on: profile_id
computed_fields:
  - name: fromCourse
    definition:
      function:
        schema: public
        name: course_participant_audit_from_course
  - name: newAttendeeEmail
    definition:
      function:
        schema: public
        name: course_participant_audit_new_attendee
  - name: toCourse
    definition:
      function:
        schema: public
        name: course_participant_audit_to_course
insert_permissions:
  - role: trainer
    permission:
      check:
        type:
          _in:
            - ATTENDED
            - NOT_ATTENDED
      set:
        authorized_by: x-hasura-User-Id
      columns:
        - authorized_by
        - course_id
        - created_at
        - id
        - payload
        - profile_id
        - type
        - updated_at
      backend_only: false
  - role: tt-admin
    permission:
      check: {}
      set:
        authorized_by: x-hasura-User-Id
      columns:
        - payload
        - type
        - created_at
        - updated_at
        - authorized_by
        - id
        - profile_id
        - course_id
      backend_only: false
select_permissions:
  - role: tt-admin
    permission:
      columns:
        - payload
        - type
        - created_at
        - updated_at
        - authorized_by
        - id
        - profile_id
        - course_id
      computed_fields:
        - newAttendeeEmail
      filter: {}
      allow_aggregations: true
event_triggers:
  - name: participant_audit_added
    definition:
      enable_manual: true
      insert:
        columns: '*'
    retry_conf:
      num_retries: 0
      interval_sec: 10
      timeout_sec: 60
    webhook: '{{EVENTS_HOST}}/email/participant-audit-added'
