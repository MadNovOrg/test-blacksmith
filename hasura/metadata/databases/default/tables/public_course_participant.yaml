table:
  name: course_participant
  schema: public
configuration:
  comment: null
  custom_column_names:
    booking_date: bookingDate
    date_graded: dateGraded
    go1_enrolment_id: go1EnrolmentId
    go1_enrolment_status: go1EnrolmentStatus
    invoice_id: invoiceID
  custom_root_fields: {}
object_relationships:
- name: certificate
  using:
    manual_configuration:
      column_mapping:
        id: course_participant_id
      insertion_order: null
      remote_table:
        name: course_certificate
        schema: public
- name: course
  using:
    foreign_key_constraint_on: course_id
- name: invite
  using:
    foreign_key_constraint_on: invite_id
- name: profile
  using:
    foreign_key_constraint_on: profile_id
array_relationships:
- name: gradingModules
  using:
    foreign_key_constraint_on:
      column: course_participant_id
      table:
        name: course_participant_module
        schema: public
insert_permissions:
- permission:
    backend_only: false
    check:
      invite:
        email:
          _eq: X-Hasura-User-Email
    columns:
    - course_id
    - invite_id
    set:
      profile_id: x-hasura-User-Id
  role: user
select_permissions:
- permission:
    allow_aggregations: true
    columns:
    - attended
    - booking_date
    - course_id
    - date_graded
    - go1_enrolment_status
    - grade
    - grading_feedback
    - id
    - invoice_id
    - profile_id
    - registration_id
    filter: {}
  role: user
update_permissions:
- permission:
    check: {}
    columns:
    - attended
    - date_graded
    - grade
    - grading_feedback
    filter:
      course:
        trainers:
          profile_id:
            _eq: X-Hasura-User-Id
  role: user
event_triggers:
- definition:
    enable_manual: false
    insert:
      columns: "*"
  name: go1_link
  retry_conf:
    interval_sec: 10
    num_retries: 3
    timeout_sec: 10
  webhook: "{{EVENTS_HOST}}/go1/link"
